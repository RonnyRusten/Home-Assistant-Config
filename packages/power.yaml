automation:
  - id: "check_power_consumption"
    alias: _Check power consumption
    description: "Runs every 10 minutes, runs script to check power consumption"
    trigger:
      - platform: time_pattern
        minutes: /10
      - platform: numeric_state
        entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
        above: "4.95"
        for:
          hours: 0
          minutes: 0
          seconds: 30
      - platform: numeric_state
        entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
        below: "4.95"
        for:
          hours: 0
          minutes: 5
          seconds: 0
    condition: []
    action:
      - service: script.power_control
    mode: single

script:
  power_control:
    alias: Control power consumption
    icon: mdi:flash
    description: "Turn on and of utilities to control power consumption"
    mode: restart
    variables:
      power_limit: 4.95
    sequence:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
                above: "4.95"
              - condition: state
                entity_id: climate.basement_hall_floor_heating
                state: "heating"
                attribute: hvac_action
            sequence:
              - service: climate.set_temperature
                target:
                  entity_id: climate.basement_hall_floor_heating
                data:
                  temperature: 20
              - service: climate.set_preset_mode
                target:
                  entity_id: climate.bedroom_ingeborg_temperature
                data:
                  preset_mode: away
              - service: climate.set_preset_mode
                target:
                  entity_id: climate.bedroom_marius_temperature
                data:
                  preset_mode: away

          - conditions:
              - condition: numeric_state
                entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
                above: "4.95"
              - condition: state
                entity_id: climate.basement_hall_floor_heating
                state: "idle"
                attribute: hvac_action
              - condition: state
                entity_id: switch.hot_water_plug
                state: "on"
            sequence:
              - service: switch.turn_off
                target:
                  entity_id: switch.hot_water_plug

          - conditions:
              - condition: numeric_state
                entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
                below: "4.95"
              - condition: state
                entity_id: climate.basement_hall_floor_heating
                state: "idle"
                attribute: hvac_action
              - condition: state
                entity_id: switch.hot_water_plug
                state: "off"
            sequence:
              - service: switch.turn_on
                target:
                  entity_id: switch.hot_water_plug

          - conditions:
              - condition: numeric_state
                entity_id: sensor.power_usage_current_hour_estimated_from_last_10_min
                below: "4.95"
              - condition: state
                entity_id: climate.basement_hall_floor_heating
                state: "idle"
                attribute: hvac_action
            sequence:
              - service: climate.set_temperature
                target:
                  entity_id: climate.basement_hall_floor_heating
                data:
                  temperature: 24
              - service: climate.set_preset_mode
                target:
                  entity_id: climate.bedroom_ingeborg_temperature
                data:
                  preset_mode: none
              - service: climate.set_preset_mode
                target:
                  entity_id: climate.bedroom_marius_temperature
                data:
                  preset_mode: none
        default: []

sensor:
  - platform: integration
    source: sensor.han_port_power_corrected
    name: energy_total
    unique_id: energy_total
    round: 2
    method: left
    unit_prefix: k

  - platform: sql
    queries:
      - name: power_usage_last_quarter
        query: "select round((max(state)-min(state)),4) as state
          from states
          where state like '%.%' and entity_id like 'sensor.energy_total'
          and last_updated > datetime('now','-15 minutes')
          and rowid > (select max(rowid)-10000 from states)
          from states where rowid = (select max(rowid) from states));"
        column: "state"
        value_template: "{{ value | urlencode }}"
        unit_of_measurement: "kWh"

template:
  - sensor:
      - name: han_port_power_corrected
        unique_id: han_port_power_corrected
        device_class: power
        state: >-
          {% if states('sensor.han_port_power') | float(0) < 0 %}
            0
          {% else %}
            {{(states('sensor.han_port_power') | float(0) / 1) | round(2) }}
          {% endif %}
        unit_of_measurement: W

      - name: electricity_cost_nordpool
        unique_id: electricity_cost
        state: "{{ states('sensor.nordpool_kwh_molde_nok_3_10_025') | float(0)  * states('sensor.consumption_current_hour')|float(0) }}"
        unit_of_measurement: NOK

      - name: electricity_total_price_deal
        unique_id: electricity_total_price_deal
        state: "{{ states('sensor.nordpool_kwh_molde_nok_3_10_025') | float(0)  +  0.045 }}"
        unit_of_measurement: Nok/kWh

      - name: electricity_total_price
        unique_id: electricity_total_price
        state: "{{ states('sensor.electricity_total_price_deal') | float(0)  +  (states('sensor.electricity_energy_cost') | float(0) + (19.26 | float(0)) / 100) }}"
        unit_of_measurement: NOK/kWh

      - name: monthly_energy_cost_nok
        unique_id: monthly_energy_cost_nok
        device_class: monetary
        state: "{{ states('sensor.monthly_energy_cost') | float(0) | round(2) }}"
        unit_of_measurement: NOK

      - name: power_usage_current_hour_estimated_from_last_10_min
        unique_id: power_usage_current_hour_estimated_from_last_10_min
        device_class: power
        state: >-
          {{ ((states('sensor.power_usage_last_10')) | float(0) / 10 
          * (60 - ((as_timestamp(states('sensor.date_time_iso'),0) | timestamp_custom('%M')) | float(0)))
          + states('sensor.consumption_current_hour') | float(0)) | round(2) }}
        unit_of_measurement: kWh

      - name: power_usage_current_hour_estimated_from_last_15_min
        unique_id: power_usage_current_hour_estimated_from_last_15_min
        device_class: power
        state: >-
          {{ ((states('sensor.power_usage_last_quarter')) | float(0) / 15 
          * (60 - ((as_timestamp(states('sensor.date_time_iso'),0) | timestamp_custom('%M')) | float(0)))
          + states('sensor.consumption_current_hour') | float(0)) | round(2) }}
        unit_of_measurement: kWh

      - name: nordpool_current_price
        unique_id: nordpool_current_price
        state: "{{ state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'current_price') }}"
        unit_of_measurement: NOK/kWh

      - name: nordpool_average_price
        unique_id: nordpool_average_price
        state: "{{ state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'average') }}"
        unit_of_measurement: NOK/kWh

      - name: nordpool_price_low
        unique_id: nordpool_price_low
        state: "{{ state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'low price') }}"

      - name: nordpool_price_high
        unique_id: nordpool_price_high
        state: "{{ (states('sensor.nordpool_kwh_molde_nok_3_10_025') | float) >= (state_attr('sensor.nordpool_kwh_molde_nok_3_10_025', 'average') | float * (1 + states('input_number.nordpool_over_avg_acceptance') | float /100)) }}"

      - name: electricity_energy_cost
        unique_id: electricity_energy_cost
        state: >-
          {% if (now().hour | float > 6  and now().hour | float < 22) %}
          0.2125
          {% else %}
          0.1375
          {% endif %}
        unit_of_measurement: NOK/kWh

utility_meter:
  total_hourly_energy:
    source: sensor.energy_total
    name: consumption current hour
    unique_id: total_hourly_energy
    cycle: hourly

  total_daily_energy:
    source: sensor.energy_total
    name: Totalt daglig
    unique_id: total_daily_energy
    cycle: daily

  total_weekly_energy:
    source: sensor.energy_total
    name: Totalt ukentlig
    unique_id: total_weekly_energy
    cycle: weekly

  total_monthly_energy:
    source: sensor.energy_total
    name: Totalt månedlig
    unique_id: total_monthly_energy
    cycle: monthly

  total_yearly_energy:
    source: sensor.energy_total
    name: Totalt årlig
    unique_id: total_yearly_energy
    cycle: yearly

  monthly_energy_cost:
    source: sensor.energy_total_cost
    name: monthly_energy_cost
    unique_id: monthly_energy_cost
    cycle: monthly

  total_hourly_cost_nordpool:
    source: sensor.electricity_cost_nordpool
    name: consumption current hour Nordpool
    unique_id: total_hourly_cost_nordpool
    cycle: hourly

  total_daily_cost_nordpool:
    source: sensor.electricity_cost_nordpool
    name: Totalt daglig Nordpool
    unique_id: total_daily_cost_nordpool
    cycle: daily

  total_monthly_cost_nordpool:
    source: sensor.electricity_cost_nordpool
    name: Totalt daglig Nordpool
    unique_id: total_daily_cost_nordpool
    cycle: monthly
